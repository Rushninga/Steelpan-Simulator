[gd_scene load_steps=4 format=3 uid="uid://buufi8lbseah8"]

[ext_resource type="PackedScene" uid="uid://c7fl4innwrghc" path="res://Objects/steelpan.tscn" id="2_mj7i1"]
[ext_resource type="PackedScene" uid="uid://dco1w80mpoq86" path="res://Objects/notes_sound.tscn" id="3_oph0d"]

[sub_resource type="GDScript" id="GDScript_osh0b"]
script/source = "extends Control
var json = '[
  {
	\"note\": \"C1\",
	\"start\": 1,
	\"end\": 1
  },
  {
	\"note\": \"D1\",
	\"start\": 2,
	\"end\": 2
  },
  {
	\"note\": \"E1\",
	\"start\": 3,
	\"end\": 3
  },
  {
	\"note\": \"F1\",
	\"start\": 4,
	\"end\": 4
  },
  {
	\"note\": \"G1\",
	\"start\": 5,
	\"end\": 5
  },
  {
	\"note\": \"A1\",
	\"start\": 6,
	\"end\": 6
  },
  {
	\"note\": \"B1\",
	\"start\": 8,
	\"end\": 8
  },
  {
	\"note\": \"C2\",
	\"start\": 9,
	\"end\": 9
  }
]'
var song_id
var song_name

var counter:int = 0
var song_time:float = 0
var incoming_notes:Array = [] #imports all the notes from the song resource file
var note_image = preload(\"res://Objects/note_image.tscn\") # a single notes object
var roll_note_image = preload(\"res://Objects/rolling note.tscn\") # a rolling note object
var shockwave = preload(\"res://Objects/shockwave.tscn\") #shockwave object for mouse when note is played
var song_end = false #false unitil the global timer reaches the song end time as dicated in the song resource file
@export var note_travel_time:float #indicates how many seconds the note will travel from its spawn time to its actrual time in the song. The speed of the note will depend on this variable
var hit_notes:Array = []
var incoming_note
var mouse

func _ready():
	$Steelpan.quality.connect(note_is_played)
	$Steelpan.global_position = Vector2(get_viewport().size.x/2, get_viewport().size.y/2)
	if note_travel_time == null:
		note_travel_time = 3
	
	incoming_notes = JSON.parse_string(json)
	for i in incoming_notes :
		i[\"start\"] += note_travel_time #adds note travel time. This is done in case a note starts at the time 0 seconds. This will put it up to 1 second where it will become playable
		i[\"end\"] +=  note_travel_time #this is done to accomidate the increase in travel time
	



func _process(delta):
	hit_notes = []
	if counter < incoming_notes.size():
		if ( incoming_notes[counter][\"start\"] - note_travel_time ) <= song_time :
			for i in $Steelpan.get_children():
				if \"note\" in i: #checks if the varable note is in the notes on the steelpan
					if i[\"note\"] == incoming_notes[counter][\"note\"]:
						if incoming_notes[counter][\"start\"] == incoming_notes[counter][\"end\"] :
							incoming_note = note_image.instantiate()
						else:
							incoming_note = roll_note_image.instantiate()
						var temp_note = incoming_notes[counter]
						incoming_note.note = i.note
						incoming_note.start = temp_note[\"start\"]
						incoming_note.end = temp_note[\"end\"]
						incoming_note.true_scale = i.scale * $Steelpan.scale
						incoming_note.global_position = i.global_position
						incoming_note.time_to_travel = note_travel_time
						incoming_note.delay = song_time - (incoming_note.start - note_travel_time)  
						$Incoming_notes.add_child(incoming_note)
			counter += 1
			incoming_note = null
	song_time += delta
	for i in $Incoming_notes.get_children():
		if song_time > i.start:
			pass
	
	#spawns a shockwave on the screen where the mouse clicks
	if Input.is_action_just_pressed(\"play\") :
		mouse = get_global_mouse_position()
		var spawn = shockwave.instantiate()
		spawn.global_position = mouse
		add_child(spawn)
	
	
func note_is_played(diff): # calculates how close the note was played to its actrual position in the song
	if diff > -0.05 and diff < 0.05:
		print(\"perfect\")
	elif diff > -0.1 and diff < 0.1:
		print(\"good\")
	elif diff > -0.2 and diff < 0.2:
		print(\"Sloppy\")
	elif diff > -0.5 and diff < 0.5:
		print(\"Sh**\")
	else:
		print(\"U suck lmfao\")
	
func reset():
	counter = 0
	song_time = 0
	
"

[node name="song_play" type="Control"]
self_modulate = Color(1, 1, 1, 0)
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_osh0b")
note_travel_time = 1.5

[node name="Steelpan" parent="." instance=ExtResource("2_mj7i1")]
scale = Vector2(0.25, 0.25)

[node name="Incoming_notes" type="Node2D" parent="."]

[node name="NotesSound" parent="." instance=ExtResource("3_oph0d")]

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(648, 356)
