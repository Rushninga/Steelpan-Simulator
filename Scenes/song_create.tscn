[gd_scene load_steps=16 format=3 uid="uid://d1clp40heva8q"]

[ext_resource type="PackedScene" uid="uid://drnxotl5rm3yq" path="res://Objects/steelpan_create.tscn" id="1_2m4mx"]
[ext_resource type="PackedScene" uid="uid://dco1w80mpoq86" path="res://Objects/notes_sound.tscn" id="2_cr3g1"]
[ext_resource type="Theme" uid="uid://di7nwijpiuy7r" path="res://Themes/song_create_theme.tres" id="3_fl1ff"]
[ext_resource type="Theme" uid="uid://ccq60t47rgtuy" path="res://Themes/start_menu_theme.tres" id="4_bj0bs"]
[ext_resource type="Texture2D" uid="uid://cnhvpwfblr2pj" path="res://GUI/gui icons/arrow_back_56dp_FFFFFF_FILL0_wght400_GRAD0_opsz48.svg" id="4_yapc3"]
[ext_resource type="Texture2D" uid="uid://cuhsakt1g4oy5" path="res://GUI/gui icons/play_circle_42dp_FFFFFF_FILL0_wght400_GRAD0_opsz40.svg" id="5_8bnab"]
[ext_resource type="Texture2D" uid="uid://d4b314t0ho7ja" path="res://GUI/gui icons/delete_56dp_FFFFFF_FILL0_wght400_GRAD0_opsz48.svg" id="6_bid4p"]
[ext_resource type="Texture2D" uid="uid://2x2qmg1bdiaj" path="res://GUI/gui icons/preview_56dp_FFFFFF_FILL0_wght400_GRAD0_opsz48.svg" id="7_7ovm8"]
[ext_resource type="Texture2D" uid="uid://cyqd8fj1iwavn" path="res://GUI/gui icons/upload_56dp_FFFFFF_FILL0_wght400_GRAD0_opsz48.svg" id="8_2ptu6"]
[ext_resource type="Texture2D" uid="uid://cwjfettr301b2" path="res://GUI/gui icons/arrow_back_42dp_FFFFFF_FILL0_wght400_GRAD0_opsz40.svg" id="10_wpajn"]

[sub_resource type="GDScript" id="GDScript_osh0b"]
script/source = "extends Control
var root
var json = '[]'
var song_name
var score:int = 0
var counter:int = 0
var end_counter:int = 0
var song_end:bool = false
var song_time:float = 0
var pre_song_time:float = 0
var create_state = 0 #0 - pause, 1 - recording, 2-previewing
var incoming_notes:Array = [] #imports all the notes from the song resource file
var note_image = preload(\"res://Objects/note_image.tscn\") # a single notes object
var roll_note_image = preload(\"res://Objects/rolling note.tscn\") # a rolling note object
var shockwave = preload(\"res://Objects/shockwave.tscn\") #shockwave object for mouse when note is played
@export var note_travel_time:float = 1 #indicates how many seconds the note will travel from its spawn time to its actrual time in the song. The speed of the note will depend on this variable
var hit_notes:Array = []
var incoming_note
var mouse
var current_note
var first_note_played = false
var stored_notes:Array = []
@onready var conn_label = $Upload_popup/Label


func _ready():
	$Steelpan.quality.connect(note_is_played)
	$Steelpan.global_position = get_viewport_rect().size/2
	root = get_tree().current_scene
	root.invalid_song_name.connect(invalid_song_name)




func _process(delta):
	if(get_parent().mode != \"record\"):
		queue_free()
	
	#spawns a shockwave on the screen where the mouse clicks
	if Input.is_action_just_pressed(\"play\") :
		mouse = get_global_mouse_position()
		var spawn = shockwave.instantiate()
		spawn.global_position = mouse
		add_child(spawn)
	
	
	match create_state:
		0:
			pass
		1:
			$Label.text = str(snappedf(song_time, 0.01))
			if stored_notes.size() > 0:
				song_time += delta
			else:
				if first_note_played == true:
					song_time += delta
				
		2:
			$Label.text = str(snappedf(song_time, 0.01))
			if counter < incoming_notes.size():
				if ( incoming_notes[counter][\"start\"] - note_travel_time ) <= song_time :
					for i in $Steelpan.get_children():
						if \"note\" in i: #checks if the varable note is in the notes on the steelpan
							if i[\"note\"] == incoming_notes[counter][\"note\"]:
								if incoming_notes[counter][\"start\"] == incoming_notes[counter][\"end\"] :
									incoming_note = note_image.instantiate()
								else:
									incoming_note = roll_note_image.instantiate()
								var temp_note = incoming_notes[counter]
								incoming_note.note = i.note
								incoming_note.start = temp_note[\"start\"]
								incoming_note.end = temp_note[\"end\"]
								incoming_note.true_scale = i.scale * $Steelpan.scale
								incoming_note.global_position = i.global_position
								incoming_note.time_to_travel = note_travel_time
								incoming_note.delay = song_time - (incoming_note.start - note_travel_time)  
								$Incoming_notes.add_child(incoming_note)
					counter += 1
					incoming_note = null
			
			if $Incoming_notes.get_children().size() > 0:
				current_note = $Incoming_notes.get_child(0) #selects the first note in the the incoming notes
				current_note.modulate = Color(\"ffffff\")
				
			for note in $Steelpan.get_children(): #highlights the most current note by making the hitbox visible
				if \"note\" in note and current_note != null:
					if note.note == current_note.note:
						note.visible = true
					else:
						note.visible = false
			
			if counter >= end_counter: #ends preview
				if $Incoming_notes.get_child_count() == 0 :
					create_state = 0
					$Container/Record.disabled = false
					$Container/Clear.disabled = false
					$Container/Submit.disabled = false
					$Container/Preview.text = \"Preview\"
					for note in $Steelpan.get_children():
						if \"note\" in note:
							note.visible = false
							
			song_time += delta #Resumes time



func note_is_played(diff): # calculates how close the note was played to its actrual position in the song
	if diff > -0.05 and diff < 0.05:
		print(\"perfect\")
		score += 100
	elif diff > -0.1 and diff < 0.1:
		print(\"good\")
		score += 50
	elif diff > -0.2 and diff < 0.2:
		print(\"Sloppy\")
		score += 25
	elif diff > -0.5 and diff < 0.5:
		print(\"Sh**\")
		score += 10
	else:
		print(\"U suck lmfao\")
		score += 5
	

func _on_record_pressed():
	if create_state == 0: #record
		song_time = pre_song_time
		$Container/Record.text = \"Pause\"
		create_state = 1
		$Container/Clear.disabled = true
		$Container/Preview.disabled = true
		$Container/Submit.disabled = true
	elif create_state == 1: #pause
		first_note_played = false
		pre_song_time = song_time
		create_state = 0
		$Container/Record.text = \"Play\"
		$Container/Clear.disabled = false
		$Container/Preview.disabled = false
		$Container/Submit.disabled = false


 
func _on_clear_pressed():
	stored_notes = []
	first_note_played = false
	pre_song_time = 0
	$Label.text = str(0)
	

func _on_preview_pressed():
	if create_state == 0: #Paused, pressing this starts the preview
		if stored_notes.size() > 0:
			song_time = note_travel_time * -1
			counter = 0
			create_state = 2
			$Container/Preview.text = \"Stop Previewing\"
			$Container/Clear.disabled = true
			$Container/Record.disabled = true
			$Container/Submit.disabled = true
			end_counter = stored_notes.size()
			incoming_notes = stored_notes
	elif create_state == 2: #previewing, pressing this pauses the preview
		create_state = 0
		$Container/Record.disabled = false
		$Container/Clear.disabled = false
		$Container/Submit.disabled = false
		$Container/Preview.text = \"Preview\"
		for note in $Steelpan.get_children(): #hides preview of incoming notes
			if \"note\" in note:
				note.visible = false
		for i in $Incoming_notes.get_children():
			i.queue_free()


func _on_back_pressed(): #goes back to main screen
	get_parent().switch_screen(\"main\")
	queue_free()
	


func _on_submit_pressed(): #shows upload pop up
	$Upload_popup.visible = true
	$Panel.visible = true


func _on_cancel_pressed(): #hides upload pop up
	$Upload_popup.visible = false
	$Panel.visible = false


func _on_upload_pressed():#uploads the song to server
	if stored_notes.size() > 0:
		song_name = $Upload_popup/LineEdit.text
		if song_name == \"\":
			$Upload_popup/Label.text = \"Please enter the song name\"
			return
		json = JSON.stringify(stored_notes)
		root.upload_song.rpc_id(1, song_name, json)
	else:
		$Upload_popup/Label.text = \"Song must have at least one note\"
		get_parent().flash_tween(conn_label)

func invalid_song_name(message):
	if message == 1:
		$Upload_popup/Label.text = \"Song name is already used\"
		get_parent().flash_tween(conn_label)
	elif message == 0:
		$Label.text = \"Song has been uploaded to server\"
		$Upload_popup.visible = false
		$Panel.visible = false
	else:
		$Label.text = \"An unknown error has occurred\"
		


func _on_resized():
	$Steelpan.global_position = get_viewport_rect().size/2
"

[sub_resource type="Theme" id="Theme_fqdw6"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_qo2lu"]
bg_color = Color(0.435294, 0, 0, 0)
border_width_top = 3
border_width_right = 3
border_width_bottom = 3
border_color = Color(0, 0, 0, 1)
corner_radius_top_right = 20
corner_radius_bottom_right = 20
shadow_color = Color(0, 0, 0, 0)
shadow_size = 10
shadow_offset = Vector2(5, 2)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_dc2ps"]
bg_color = Color(0.776471, 0, 0, 0)
border_width_top = 3
border_width_right = 3
border_width_bottom = 3
border_color = Color(1, 1, 1, 1)
corner_radius_top_right = 20
corner_radius_bottom_right = 20
shadow_color = Color(0, 0, 0, 0)
shadow_size = 10
shadow_offset = Vector2(5, 2)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_v0x6j"]
bg_color = Color(0, 0, 0, 0.596078)
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 3
border_color = Color(1, 1, 1, 1)
corner_radius_top_left = 12
corner_radius_top_right = 12
corner_radius_bottom_right = 12
corner_radius_bottom_left = 12

[node name="song_play" type="Control"]
self_modulate = Color(1, 1, 1, 0)
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_osh0b")
note_travel_time = 1.5

[node name="Steelpan" parent="." instance=ExtResource("1_2m4mx")]
scale = Vector2(0.24, 0.24)

[node name="Incoming_notes" type="Node2D" parent="."]

[node name="NotesSound" parent="." instance=ExtResource("2_cr3g1")]

[node name="Container" type="VBoxContainer" parent="."]
custom_minimum_size = Vector2(200, 0)
layout_mode = 1
anchors_preset = 9
anchor_bottom = 1.0
offset_right = 262.0
grow_vertical = 2
theme = SubResource("Theme_fqdw6")
theme_override_constants/separation = 50

[node name="Back" type="Button" parent="Container"]
custom_minimum_size = Vector2(180, 0)
layout_mode = 2
size_flags_horizontal = 0
theme = ExtResource("3_fl1ff")
theme_override_colors/font_hover_pressed_color = Color(1, 1, 1, 1)
theme_override_colors/icon_hover_pressed_color = Color(1, 1, 1, 1)
theme_override_colors/icon_hover_color = Color(1, 1, 1, 1)
theme_override_colors/icon_normal_color = Color(1, 1, 1, 1)
theme_override_colors/font_color = Color(1, 1, 1, 1)
theme_override_styles/hover = SubResource("StyleBoxFlat_qo2lu")
theme_override_styles/normal = SubResource("StyleBoxFlat_dc2ps")
text = "Back"
icon = ExtResource("4_yapc3")

[node name="Record" type="Button" parent="Container"]
layout_mode = 2
theme = ExtResource("3_fl1ff")
text = "Start"
icon = ExtResource("5_8bnab")
expand_icon = true

[node name="Clear" type="Button" parent="Container"]
layout_mode = 2
theme = ExtResource("3_fl1ff")
text = "Clear Notes"
icon = ExtResource("6_bid4p")
expand_icon = true

[node name="Preview" type="Button" parent="Container"]
layout_mode = 2
theme = ExtResource("3_fl1ff")
text = "Preview"
icon = ExtResource("7_7ovm8")
expand_icon = true

[node name="Submit" type="Button" parent="Container"]
layout_mode = 2
theme = ExtResource("3_fl1ff")
text = "Submit"
icon = ExtResource("8_2ptu6")
expand_icon = true

[node name="Panel" type="Panel" parent="."]
visible = false
custom_minimum_size = Vector2(650, 300)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -100.0
offset_top = -20.0
offset_right = 100.0
offset_bottom = 20.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource("3_fl1ff")
theme_override_styles/panel = SubResource("StyleBoxFlat_v0x6j")

[node name="Upload_popup" type="VBoxContainer" parent="."]
visible = false
custom_minimum_size = Vector2(600, 250)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -20.0
offset_top = -20.0
offset_right = 20.0
offset_bottom = 20.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/separation = 20

[node name="Label" type="Label" parent="Upload_popup"]
layout_mode = 2
theme = ExtResource("4_bj0bs")
text = "Enter Song Name:"
horizontal_alignment = 1

[node name="LineEdit" type="LineEdit" parent="Upload_popup"]
custom_minimum_size = Vector2(0, 60)
layout_mode = 2
theme = ExtResource("4_bj0bs")
placeholder_text = "Song Name"
alignment = 1
max_length = 50

[node name="Upload" type="Button" parent="Upload_popup"]
custom_minimum_size = Vector2(200, 60)
layout_mode = 2
size_flags_horizontal = 4
theme = ExtResource("4_bj0bs")
text = "Sumbit"
icon = ExtResource("8_2ptu6")
expand_icon = true

[node name="Cancel" type="Button" parent="Upload_popup"]
custom_minimum_size = Vector2(200, 60)
layout_mode = 2
size_flags_horizontal = 4
theme = ExtResource("4_bj0bs")
text = "Cancel"
icon = ExtResource("10_wpajn")
expand_icon = true

[node name="Label" type="Label" parent="."]
custom_minimum_size = Vector2(200, 60)
layout_mode = 1
anchors_preset = 3
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -40.0
offset_top = -23.0
grow_horizontal = 0
grow_vertical = 0
theme = ExtResource("4_bj0bs")
theme_override_font_sizes/font_size = 50
text = "0.00"

[connection signal="resized" from="." to="." method="_on_resized"]
[connection signal="pressed" from="Container/Back" to="." method="_on_back_pressed"]
[connection signal="pressed" from="Container/Record" to="." method="_on_record_pressed"]
[connection signal="pressed" from="Container/Clear" to="." method="_on_clear_pressed"]
[connection signal="pressed" from="Container/Preview" to="." method="_on_preview_pressed"]
[connection signal="pressed" from="Container/Submit" to="." method="_on_submit_pressed"]
[connection signal="text_submitted" from="Upload_popup/LineEdit" to="." method="_on_upload_pressed"]
[connection signal="pressed" from="Upload_popup/Upload" to="." method="_on_upload_pressed"]
[connection signal="pressed" from="Upload_popup/Cancel" to="." method="_on_cancel_pressed"]
